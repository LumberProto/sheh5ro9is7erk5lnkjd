
function tableToString(tbl)
    local result = "{"
    for key, value in pairs(tbl) do
        if type(value) == "string" then
            result = result .. key .. '="' .. value .. '",'
        elseif type(value) == "boolean" or type(value) == "number" then
            result = result .. key .. '=' .. tostring(value) .. ','
        end
    end
    result = result:sub(1, -2) .. "}"
    return result
end

local configTable = getgenv().Config
local configString = 'getgenv().Config = ' .. tableToString(configTable)
local fullScript = configString .. [[
    repeat
        task.wait()
    until game:IsLoaded()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LumberProto/sheh5ro9is7erk5lnkjd/main/TreeFinder"))()
]]


queue_on_teleport(fullScript)


local Tree
local treesToFind = getgenv().Config.TreesToFind
local treesString = table.concat(treesToFind, ", ")
local module = loadstring(game:HttpGet"https://raw.githubusercontent.com/LeoKholYt/roblox/main/lk_serverhop.lua")()

for i, v in pairs(workspace:GetChildren()) do
    if v.Name == "TreeRegion" then
        for k, l in pairs(v:GetChildren()) do
            if l:FindFirstChild("TreeClass") and l:FindFirstChild("WoodSection") and l:FindFirstChild("Owner") then
                if (l.TreeClass.Value == treesString) and l.Owner.Value == nil then
                    Tree = l
                end
            end
        end
    end
end

if Tree == nil then
    game.ReplicatedStorage.Notices.SendUserNotice:Fire(string.format('No %s Wood Found!', treesString))
    wait(2)
    return
    module:Teleport(game.PlaceId)
end

if Tree ~= nil then
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Tree["WoodSection"].CFrame

game.ReplicatedStorage.Notices.SendUserNotice:Fire(string.format("Claimed  %s Tree, Load Your Base To Cut The Tree", treesString))
end
